# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: "**"

permissions:
  contents: read

env:
  PYTHON_VERSION: "3.10.10"
  POETRY_VERSION: "1.5.1"

jobs:
  testing:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: install poetry
      run: pipx install poetry==${{ env.POETRY_VERSION }}

    - name: set up python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'poetry'
    - run: poetry install --no-root

    - name: test with pytest
      run: poetry run python3 -m pytest --cov=app

    - name: lint with flake8
      run: poetry run flake8 . --count

    - name: lint with mypy
      run: poetry run mypy .

    - name: isort
      run: poetry run isort .


  build_and_push:
    if: ${{ github.event_name != 'pull_request' }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/training_api:latest
